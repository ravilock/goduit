// Code generated by mockery v2.44.1. DO NOT EDIT.

package services

import (
	context "context"

	models "github.com/ravilock/goduit/internal/articlePublisher/models"
	mock "github.com/stretchr/testify/mock"
)

// mockCommentWriter is an autogenerated mock type for the commentWriter type
type mockCommentWriter struct {
	mock.Mock
}

type mockCommentWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *mockCommentWriter) EXPECT() *mockCommentWriter_Expecter {
	return &mockCommentWriter_Expecter{mock: &_m.Mock}
}

// WriteComment provides a mock function with given fields: ctx, article
func (_m *mockCommentWriter) WriteComment(ctx context.Context, article *models.Comment) error {
	ret := _m.Called(ctx, article)

	if len(ret) == 0 {
		panic("no return value specified for WriteComment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.Comment) error); ok {
		r0 = rf(ctx, article)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockCommentWriter_WriteComment_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteComment'
type mockCommentWriter_WriteComment_Call struct {
	*mock.Call
}

// WriteComment is a helper method to define mock.On call
//   - ctx context.Context
//   - article *models.Comment
func (_e *mockCommentWriter_Expecter) WriteComment(ctx interface{}, article interface{}) *mockCommentWriter_WriteComment_Call {
	return &mockCommentWriter_WriteComment_Call{Call: _e.mock.On("WriteComment", ctx, article)}
}

func (_c *mockCommentWriter_WriteComment_Call) Run(run func(ctx context.Context, article *models.Comment)) *mockCommentWriter_WriteComment_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*models.Comment))
	})
	return _c
}

func (_c *mockCommentWriter_WriteComment_Call) Return(_a0 error) *mockCommentWriter_WriteComment_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockCommentWriter_WriteComment_Call) RunAndReturn(run func(context.Context, *models.Comment) error) *mockCommentWriter_WriteComment_Call {
	_c.Call.Return(run)
	return _c
}

// newMockCommentWriter creates a new instance of mockCommentWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockCommentWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockCommentWriter {
	mock := &mockCommentWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
