// Code generated by mockery v2.53.2. DO NOT EDIT.

package handlers

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockArticleUnpublisher is an autogenerated mock type for the articleUnpublisher type
type mockArticleUnpublisher struct {
	mock.Mock
}

type mockArticleUnpublisher_Expecter struct {
	mock *mock.Mock
}

func (_m *mockArticleUnpublisher) EXPECT() *mockArticleUnpublisher_Expecter {
	return &mockArticleUnpublisher_Expecter{mock: &_m.Mock}
}

// UnpublishArticle provides a mock function with given fields: ctx, slug
func (_m *mockArticleUnpublisher) UnpublishArticle(ctx context.Context, slug string) error {
	ret := _m.Called(ctx, slug)

	if len(ret) == 0 {
		panic("no return value specified for UnpublishArticle")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, slug)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockArticleUnpublisher_UnpublishArticle_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UnpublishArticle'
type mockArticleUnpublisher_UnpublishArticle_Call struct {
	*mock.Call
}

// UnpublishArticle is a helper method to define mock.On call
//   - ctx context.Context
//   - slug string
func (_e *mockArticleUnpublisher_Expecter) UnpublishArticle(ctx interface{}, slug interface{}) *mockArticleUnpublisher_UnpublishArticle_Call {
	return &mockArticleUnpublisher_UnpublishArticle_Call{Call: _e.mock.On("UnpublishArticle", ctx, slug)}
}

func (_c *mockArticleUnpublisher_UnpublishArticle_Call) Run(run func(ctx context.Context, slug string)) *mockArticleUnpublisher_UnpublishArticle_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockArticleUnpublisher_UnpublishArticle_Call) Return(_a0 error) *mockArticleUnpublisher_UnpublishArticle_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockArticleUnpublisher_UnpublishArticle_Call) RunAndReturn(run func(context.Context, string) error) *mockArticleUnpublisher_UnpublishArticle_Call {
	_c.Call.Return(run)
	return _c
}

// newMockArticleUnpublisher creates a new instance of mockArticleUnpublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockArticleUnpublisher(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockArticleUnpublisher {
	mock := &mockArticleUnpublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
