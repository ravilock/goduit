// Code generated by mockery v2.53.2. DO NOT EDIT.

package handlers

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockCookieClearer is an autogenerated mock type for the CookieClearer type
type MockCookieClearer struct {
	mock.Mock
}

type MockCookieClearer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCookieClearer) EXPECT() *MockCookieClearer_Expecter {
	return &MockCookieClearer_Expecter{mock: &_m.Mock}
}

// CookieClear provides a mock function with no fields
func (_m *MockCookieClearer) CookieClear() *http.Cookie {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for CookieClear")
	}

	var r0 *http.Cookie
	if rf, ok := ret.Get(0).(func() *http.Cookie); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Cookie)
		}
	}

	return r0
}

// MockCookieClearer_CookieClear_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CookieClear'
type MockCookieClearer_CookieClear_Call struct {
	*mock.Call
}

// CookieClear is a helper method to define mock.On call
func (_e *MockCookieClearer_Expecter) CookieClear() *MockCookieClearer_CookieClear_Call {
	return &MockCookieClearer_CookieClear_Call{Call: _e.mock.On("CookieClear")}
}

func (_c *MockCookieClearer_CookieClear_Call) Run(run func()) *MockCookieClearer_CookieClear_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCookieClearer_CookieClear_Call) Return(_a0 *http.Cookie) *MockCookieClearer_CookieClear_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCookieClearer_CookieClear_Call) RunAndReturn(run func() *http.Cookie) *MockCookieClearer_CookieClear_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockCookieClearer creates a new instance of MockCookieClearer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCookieClearer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCookieClearer {
	mock := &MockCookieClearer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
