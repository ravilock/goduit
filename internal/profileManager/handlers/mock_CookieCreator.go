// Code generated by mockery v2.53.2. DO NOT EDIT.

package handlers

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockCookieCreator is an autogenerated mock type for the CookieCreator type
type MockCookieCreator struct {
	mock.Mock
}

type MockCookieCreator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCookieCreator) EXPECT() *MockCookieCreator_Expecter {
	return &MockCookieCreator_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: token
func (_m *MockCookieCreator) Create(token string) *http.Cookie {
	ret := _m.Called(token)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 *http.Cookie
	if rf, ok := ret.Get(0).(func(string) *http.Cookie); ok {
		r0 = rf(token)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Cookie)
		}
	}

	return r0
}

// MockCookieCreator_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockCookieCreator_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - token string
func (_e *MockCookieCreator_Expecter) Create(token interface{}) *MockCookieCreator_Create_Call {
	return &MockCookieCreator_Create_Call{Call: _e.mock.On("Create", token)}
}

func (_c *MockCookieCreator_Create_Call) Run(run func(token string)) *MockCookieCreator_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockCookieCreator_Create_Call) Return(_a0 *http.Cookie) *MockCookieCreator_Create_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCookieCreator_Create_Call) RunAndReturn(run func(string) *http.Cookie) *MockCookieCreator_Create_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockCookieCreator creates a new instance of MockCookieCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCookieCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCookieCreator {
	mock := &MockCookieCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
